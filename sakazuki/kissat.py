import subprocess
from pathlib import Path


solver_path = (Path(__file__).parent / "kissat").resolve()


def solve(dimacs: str) -> dict[str, bool] | None:
    """
    solve関数の実装

    Args:
        dimacs: DIMACS形式のCNF文字列 generated by cnfc

    Returns:
        dict[str, bool]: 解. keyは変数名, valueはその変数の値. 変数名はdimacsファイルにコメントで書かれている変数名.
    """
    input_vars = parse_input_vars(dimacs)
    result = subprocess.run([str(solver_path), "-q"], text=True, input=dimacs, capture_output=True)
    if "unsat" in result.stdout:
        return None
    assignments = parse_output(result.stdout)
    return {var_name: assignments[var_number] for var_name, var_number in input_vars.items()}


def parse_input_vars(dimacs: str) -> dict[str, int]:
    # c var 5045 : door_connections_1_3_2
    input_vars = {}
    for l in dimacs.splitlines():
        if l.startswith("c var"):
            _c, _var, var_number, _colon, var_name = l.split()
            input_vars[var_name] = int(var_number)
    return input_vars


def parse_output(output: str) -> dict[int, bool]:
    assignments = {}
    for l in output.splitlines():
        if l.startswith("v"):
            for x in l.split()[1:]:
                x = int(x)
                assignments[abs(x)] = True if x > 0 else False
    return assignments

if __name__ == "__main__":
    with open("output.cnf", "r") as f:
        dimacs = f.read()
    print(solve(dimacs))